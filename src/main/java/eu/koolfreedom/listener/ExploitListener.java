package eu.koolfreedom.listener;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;
import eu.koolfreedom.util.FLog;
import org.apache.commons.lang3.StringUtils;
import eu.koolfreedom.KoolSMPCore;

public class ExploitListener extends PacketAdapter
{
    private long lastLogTime = System.currentTimeMillis();

    public ExploitListener()
    {
        super(KoolSMPCore.getInstance(), ListenerPriority.HIGHEST, PacketType.Play.Client.CHAT_COMMAND, PacketType.Play.Client.TAB_COMPLETE);
    }

    public void onPacketReceiving(PacketEvent event)
    {
        if (event.isCancelled())
            return;

        // Reject blank messages
        if (event.getPacketType() == PacketType.Play.Client.CHAT_COMMAND)
        {
            String message = event.getPacket().getStrings().read(0);
            if (!message.isEmpty() && message.isBlank())
                event.setCancelled(true);
        }
        // Reject tab completions if...
        else if (event.getPacketType() == PacketType.Play.Client.TAB_COMPLETE)
        {
            String command = event.getPacket().getStrings().read(0);

            // The command is empty
            if (command.equals("/") || command.isBlank())
            {
                event.setCancelled(true);
            }
            // The command has NBT in it and that reaches a certain threshold or is too long
            else if ((command.contains("nbt") && (StringUtils.countMatches(command, "[") > 15 || StringUtils.countMatches(command, "{") > 25)) || command.length() > 256)
            {
                event.setCancelled(true);
                long currentTime = System.currentTimeMillis();
                if (currentTime - this.lastLogTime > 1000L)
                {
                    FLog.warning("Potential Crash Completion: " + command);
                    this.lastLogTime = currentTime;
                }
            }
        }
    }
}