#
# KoolSMPCore v3.0 Configuration File
#

server:
  motd: '<randomize>KoolFreedom SMP (Native 1.21.1)'
  tablist_header: ' <newline>  <light_purple>Welcome to <gold>KoolFreedom SMP</gold>!  <newline> '
  tablist_footer: ' <newline>  <light_purple>Join our <dark_purple>/discord</dark_purple> <newline>  '
  website_or_forum: 'Put your own forum/website here.'

# All things related to the announcer
announcer:
  # Toggles the announcer
  enable: true

  # Time in ticks between each announcement
  delay: 2400

  # Announcer's messages, formatted in MiniMessage
  messages:
    - "<red>[<gold>KoolFreedom</gold>] Remember to join our Discord with <gold><click:suggest_command:/discord>'/discord'</click></gold>."
    - "<red>[<gold>KoolFreedom</gold>] Dealing with a rule-breaker? Use <gold><click:suggest_command:/report>'/report'</click></gold> to submit a report."
    - "<red>[<gold>KoolFreedom</gold>] <gold>gamingto12</gold> is the owner of KoolFreedom."

# Chat filter
chat-filter:
  # Toggles the filter
  enabled: true

  # Delay in ticks before the action takes place
  delay: 50

  # Categories of filters
  categories:
    # Example entry
    example:
      # The permission node required to bypass this filter
      bypassPermission: kfc.bypass_filter.example
      # The action to take. Currently available options: ban, doom, log, mute, nothing
      action: log
      # Whether to cancel the chat event
      cancel: false
      # The message/reason to give in regard to the action. This doesn't do anything if the action is set to "mute"
      reason: "{} is spitting facts right now: '{}'"
      # A list of regex patterns
      filters:
        - "gamingto12 is smelly"
        - "video(gamesm12)? is not a bunny"

    # Generic hate speech filter which dooms players who say naughty phrases
    hate-speech:
      action: doom
      cancel: true
      reason: Hate Speech
      filters:
        - "(?i)n[i1]+g+(a|e+r)"
        - "(?i)f[a4]g+([o0]t)?"
        - "(?i)heil hitler"
        - "(?i)seig heil"
        - "(?i)tran{2,}y"
        - "(?i)tro{2,}n"

# Formats
formats:
  admin_chat: "<dark_gray>[<aqua>AC</aqua>] <blue><name></blue> [<rank>] <gold><message>"
  commandspy: "<gray><hover:show_text:'<translate:chat.copy.click>'><click:copy_to_clipboard:<name>><name></click></hover>: <click:suggest_command:'<raw_command>'><command>"
  report: "<dark_gray>[<red>REPORTS</red>] <gold><reporter></gold> <red>has reported <gold><player></gold> for <gold><reason></gold>."
  report_summary: "<gradient:dark_gray:gray>████</gradient> Report Summary - <id> <gradient:gray:dark_gray>████</gradient><newline><dark_gray><b>|</b><newline><b>|</b>   <gray>Reported: <white><reported></white></gray><newline><b>|</b>   <gray>By: <white><reporter></white></gray><newline><b>|</b>   <gray>Reason: <white><reason></white></gray><newline><b>|</b>   <gray>Date: <white><date:'yyyy-MM-dd \\'at\\' h:mm:ss a'></white></gray><newline><b>|</b>   <gray>Status: <white><status></white></gray><newline><b>|</b>   <gray>Staff Note: <white><staff_note></white></gray><newline><b>|</b>"
  report_quick_summary: "<b><dark_gray>|</dark_gray></b> <hover:show_text:'<full_summary>'><click:run_command:'/reports summary <id>'><white><date:'HH:mm:ss'></white> <gray>| <white><reporter></white> reported <white><reported></white></click></hover>"
  report_empty_quick_summary: "<b><dark_gray>|</dark_gray></b> "
  say: "<light_purple>[Server:<name>] <message>"

# DiscordSRV integration
discordsrv:
  # How we handle groups in places like the Admin Chat
  # 0 - Use a blanket [Discord] group
  # 1 - Use groups defined below based on the role names and using ones generated by the bridge using role details as needed
  # 2 - Ignore the group configuration below and just generate groups as we need them based on the role details
  group_role_mode: 0

  # How users are handled in admin chat messages from DiscordSRV
  # Available placeholders:
  #   - display_name: The user's display name on Discord. If they do not have a name on their account, it simply reverts
  #                   to their regular Discord name.
  #   - role_color:   The color of the top role the user is in. If none are present, it will be white.
  #   - roles:        The user's roles, neatly collected together.
  #   - id:           The user's Discord ID. Can be inserted into other elements like hoverable elements.
  #   - name:         The user's Discord name. Can be inserted into other elements like hoverable elements.
  #   - nickname:     The user's nickname in the server. Can be inserted into other elements like hoverable elements.
  #   - username:     The user's Discord username. Can be inserted into other elements like hoverable elements.
  user_format: "<click:suggest_command:'/ac <@<id>> '><hover:show_text:'<b><name></b><newline><gray>@<username></gray><newline><newline>Roles:<newline><roles><newline><newline>Click to Reply'><role_color><nickname></role_color></click>"


# Groups that show up in places like admin chat
groups:
  default:
    name: default
    color: gray
    displayName: <gray>Member
  mod:
    name: mod
    color: green
    displayName: <green>Moderator
  admin:
    name: admin
    color: aqua
    displayName: <aqua>Admin
  senior:
    name: senior
    color: gold
    displayName: <gold>Senior
  developer:
    name: developer
    color: dark_purple
    displayName: <dark_purple>Developer
  manager:
    name: manager
    color: light_purple
    displayName: <light_purple>Manager
  co_owner:
    name: co_owner
    color: red
    displayName: <red>Co-Owner
  executive:
    name: executive
    color: dark_red
    displayName: <dark_red>Executive
  owner:
    name: owner
    color: red
    displayName: <red>Owner
